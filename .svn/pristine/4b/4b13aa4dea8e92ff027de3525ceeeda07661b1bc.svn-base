{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\view/assets\\scripts\\view\\LvlSelect.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\view","sourcesContent":["import Global from \"../Global\";\r\nimport * as Const from \"../Const\";\r\nimport GameView from \"./GameView\"\r\nimport HomeView from \"./HomeView\";\r\nimport ScrollViewBetter from \"../component/ScrollViewBetter\";\r\nimport AudioMgr from \"../component/AudioMgr\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class lvlSelect extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    HomeView: cc.Node = null;\r\n    @property(cc.Node)\r\n    GameView: cc.Node = null;\r\n    @property(cc.Node)\r\n    btn_back: cc.Node = null;\r\n    @property(cc.Node)\r\n    scrollView: cc.Node = null;\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n    @property(cc.Node)\r\n    lvlLabel: cc.Node = null;\r\n\r\n    @property\r\n    cellsPerRow: number = 3;\r\n    @property\r\n    itemWidth: number = 210;\r\n    @property\r\n    itemHeight: number = 300;\r\n    @property\r\n    spacingX: number = 1.14;\r\n    @property\r\n    spacingY: number = 1.12;\r\n\r\n    private gameScript: GameView;\r\n\r\n    public titleJson;\r\n    private iconList: cc.SpriteFrame[] = [];\r\n    private lockList: cc.SpriteFrame[] = [];\r\n\r\n    onEnable() {\r\n        // update label\r\n        this.lvlLabel.getComponent(cc.Label).string = (Global.gameData.level - 1).toString();\r\n    }\r\n\r\n    init() {\r\n        if (this.iconList.length != 0) return;\r\n\r\n        this.gameScript = this.GameView.getComponent(GameView);\r\n\r\n        // init label\r\n        this.lvlLabel.getComponent(cc.Label).string = (Global.gameData.level - 1).toString();\r\n\r\n        let urls = [\r\n            'textures/lvlSelect/frame5_0',\r\n            'textures/lvlSelect/crown2',\r\n            'textures/lvlSelect/icon_new',\r\n            'textures/lvlSelect/line',\r\n            'textures/lvlSelect/question',\r\n            'textures/lvlSelect/lock',\r\n            'textures/lvlSelect/zhezhao',\r\n        ];\r\n        cc.loader.loadResArray(urls, (err, res) => {\r\n            if (err) { console.error('loadResArray error:', err) };\r\n            console.log(res)\r\n\r\n            this.iconList.push(new cc.SpriteFrame(res[1]));\r\n            this.iconList.push(new cc.SpriteFrame(res[2]));\r\n            this.lockList.push(new cc.SpriteFrame(res[4]));\r\n            this.lockList.push(new cc.SpriteFrame(res[5]));\r\n\r\n\r\n            // for (let i = 0; i < Global.config.MaxShowLevel; i++) {\r\n            //     /** frame */\r\n            //     let item = new cc.Node('item' + (i + 1).toString());\r\n            //     this.content.addChild(item);\r\n            //     let sp = item.addComponent(cc.Sprite);\r\n            //     sp.spriteFrame = new cc.SpriteFrame(res[0]);\r\n            //     item.width = this.itemWidth;\r\n            //     item.height = this.itemHeight;\r\n            //     item.x = (i % this.cellsPerRow - Math.floor(this.cellsPerRow / 2) + (this.cellsPerRow + 1) % 2 * 0.5) * item.width * this.spacingX;\r\n            //     item.y = -((Math.floor(i / this.cellsPerRow)) + 0.5) * item.height * this.spacingY;\r\n            //     item.zIndex = 1;\r\n            //     this.content.height = ((Math.floor(Global.config.MaxShowLevel / this.cellsPerRow)) + 1) * this.itemHeight * this.spacingY;\r\n            //     // add listener\r\n            //     this.addItemListener(item, i + 1);\r\n            //     /** icon */\r\n            //     if (this.iconList.length == 0) {\r\n            //         this.iconList.push(new cc.SpriteFrame(res[1]));\r\n            //         this.iconList.push(new cc.SpriteFrame(res[2]));\r\n            //     }\r\n            //     let icon = new cc.Node('icon');\r\n            //     item.addChild(icon);\r\n            //     icon.addComponent(cc.Sprite);\r\n            //     icon.getComponent(cc.Sprite).spriteFrame = this.iconList[1];\r\n            //     icon.x = -item.width / 2 + icon.width * 0.4;\r\n            //     icon.y = item.height / 2 - icon.height * 0.85;\r\n            //     /** line */\r\n            //     if (i % 3 == 0) {\r\n            //         let line = new cc.Node('line' + Math.floor(i / 3));\r\n            //         this.content.addChild(line);\r\n            //         line.addComponent(cc.Sprite);\r\n            //         line.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(res[3]);\r\n            //         line.x = 0;\r\n            //         line.y = item.y + item.height * 0.45;\r\n            //         line.zIndex = 0;\r\n            //     }\r\n            //     /** lvlLabel */\r\n            //     let label = new cc.Node();\r\n            //     item.addChild(label);\r\n            //     label.addComponent(cc.Label);\r\n            //     label.getComponent(cc.Label).string = (i + 1).toString();\r\n            //     label.getComponent(cc.Label).fontSize = 30;\r\n            //     label.getComponent(cc.Label).font = this.lvlLabel.getComponent(cc.Label).font;\r\n            //     label.color = new cc.Color(0, 0, 0);\r\n            //     label.x = 0;\r\n            //     label.y = -item.height * 0.37;\r\n            //     /** lock */\r\n            //     if (this.lockList.length == 0) {\r\n            //         this.lockList.push(new cc.SpriteFrame(res[4]));\r\n            //         this.lockList.push(new cc.SpriteFrame(res[5]));\r\n            //     }\r\n            //     let lock = new cc.Node('lock');\r\n            //     item.addChild(lock);\r\n            //     lock.addComponent(cc.Sprite);\r\n            //     lock.getComponent(cc.Sprite).spriteFrame = this.lockList[0];\r\n            //     lock.x = 0;\r\n            //     lock.y = -5;\r\n            //     /** mask */\r\n            //     let mask = new cc.Node('mask');\r\n            //     item.addChild(mask);\r\n            //     mask.addComponent(cc.Sprite);\r\n            //     mask.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(res[6]);\r\n            //     mask.x = 0;\r\n            //     mask.y = 0;\r\n\r\n            //     // update list by level index\r\n            //     this.updateList(i + 1);\r\n            // }\r\n\r\n\r\n            this.scrollView.getComponent(ScrollViewBetter).createItems(Math.ceil(Global.config.MaxShowLevel / 3), (itemNode, index) => {\r\n                for (let i = 0; i < 3; i++) {\r\n                    let lvlIdx = index * 3 + i + 1;\r\n                    let item = itemNode.getChildByName(i.toString());\r\n                    // add listener\r\n                    this.addItemListener(item, lvlIdx);\r\n                    // change item\r\n                    let icon: cc.Node = item.getChildByName('icon');\r\n                    let lock: cc.Node = item.getChildByName('lock');\r\n                    let mask: cc.Node = item.getChildByName('mask');\r\n                    let solution: cc.Node = item.getChildByName('solution');\r\n                    let label: cc.Node = item.getChildByName('label');\r\n                    label.getComponent(cc.Label).string = lvlIdx.toString();\r\n                    if (lvlIdx < Global.gameData.level) {\r\n                        icon.active = true;\r\n                        icon.getComponent(cc.Sprite).spriteFrame = this.iconList[0];\r\n                        icon.x = -item.width / 2 + icon.width * 0.4;\r\n                        icon.y = item.height / 2 - icon.height * 0.85;\r\n                        lock.active = false;\r\n                        mask.active = false;\r\n                        solution.active = true;\r\n                        cc.loader.load(GameView.BaseUrl + 'solution/' + this.titleJson[lvlIdx] + '.png', (err, res2) => {\r\n                            solution.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(res2);\r\n                            solution.scale = 0.48;\r\n                        });\r\n                    } else if (lvlIdx == Global.gameData.level && lvlIdx <= Global.config.MaxLevel) {\r\n                        icon.active = true;\r\n                        icon.getComponent(cc.Sprite).spriteFrame = this.iconList[1];\r\n                        icon.x = -item.width / 2 + icon.width * 0.4;\r\n                        icon.y = item.height / 2 - icon.height * 0.85;\r\n                        lock.active = true;\r\n                        lock.getComponent(cc.Sprite).spriteFrame = this.lockList[0];\r\n                        mask.active = false;\r\n                        solution.active = false;\r\n                    } else {\r\n                        icon.active = false;\r\n                        lock.active = true;\r\n                        lock.getComponent(cc.Sprite).spriteFrame = this.lockList[1];\r\n                        mask.active = true;\r\n                        mask.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(res[6]);\r\n                        solution.active = false;\r\n                    }\r\n                }\r\n            }, 0);\r\n        });\r\n\r\n        this.addBtnListener();\r\n    }\r\n\r\n    // // update list by level idx: start to end\r\n    // updateList(start: number, end?: number) {\r\n    //     // update label\r\n    //     this.lvlLabel.getComponent(cc.Label).string = (Global.gameData.level - 1).toString();\r\n    //     // update list item\r\n    //     !end && (end = start);\r\n    //     end < 1 && (end = 1);\r\n    //     end > Global.config.MaxShowLevel && (end = Global.config.MaxShowLevel);\r\n    //     while (start <= end) {\r\n    //         let item: cc.Node = this.content.getChildByName('item' + start);\r\n    //         let icon: cc.Node = item.getChildByName('icon');\r\n    //         let lock: cc.Node = item.getChildByName('lock');\r\n    //         let mask: cc.Node = item.getChildByName('mask');\r\n    //         if (start < Global.gameData.level) {\r\n    //             icon.active = true;\r\n    //             icon.getComponent(cc.Sprite).spriteFrame = this.iconList[0];\r\n    //             lock.active = false;\r\n    //             mask.active = false;\r\n    //             // set content\r\n    //             let solution: cc.Node = item.getChildByName('solution');\r\n    //             if (solution) {\r\n    //                 solution.active = true;\r\n    //             } else {\r\n    //                 solution = new cc.Node('solution');\r\n    //                 item.addChild(solution);\r\n    //                 solution.addComponent(cc.Sprite);\r\n    //                 solution.y = -5;\r\n    //                 cc.loader.load(GameView.BaseUrl + 'solution/' + this.titleJson[start] + '.png', (err, res) => {\r\n    //                     solution.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(res);\r\n    //                     solution.scale = 0.48;\r\n    //                 });\r\n    //             }\r\n    //         } else if (start == Global.gameData.level && start <= Global.config.MaxLevel) {\r\n    //             icon.active = true;\r\n    //             icon.getComponent(cc.Sprite).spriteFrame = this.iconList[1];\r\n    //             lock.active = true;\r\n    //             lock.getComponent(cc.Sprite).spriteFrame = this.lockList[0];\r\n    //             mask.active = false;\r\n    //         } else {\r\n    //             icon.active = false;\r\n    //             lock.active = true;\r\n    //             lock.getComponent(cc.Sprite).spriteFrame = this.lockList[1];\r\n    //             mask.active = true;\r\n    //         }\r\n    //         start++;\r\n    //     }\r\n    // }\r\n\r\n    private addItemListener(item: cc.Node, idx: number) {\r\n        // off\r\n        item.targetOff(item);\r\n        // on\r\n        item.on(cc.Node.EventType.TOUCH_START, (e) => {\r\n            item.color = new cc.Color(180, 180, 180);\r\n        }, item);\r\n        item.on(cc.Node.EventType.TOUCH_MOVE, (e) => {\r\n            item.color = new cc.Color(255, 255, 255);\r\n        }, item);\r\n        item.on(cc.Node.EventType.TOUCH_END, (e) => {\r\n            console.log('click level', idx)\r\n            AudioMgr.instance.play('button');\r\n            item.color = new cc.Color(255, 255, 255);\r\n            if (idx <= Global.gameData.level) {\r\n                this.gameScript.startGame(idx);\r\n                this.node.active = false;\r\n                this.GameView.active = true;\r\n            }\r\n        }, item);\r\n    }\r\n\r\n    private addBtnListener() {\r\n        // btn back\r\n        this.btn_back.on(cc.Node.EventType.TOUCH_START, () => {\r\n            this.btn_back.opacity = 180;\r\n        });\r\n        this.btn_back.on(cc.Node.EventType.TOUCH_CANCEL, () => {\r\n            this.btn_back.opacity = 255;\r\n        });\r\n        this.btn_back.on(cc.Node.EventType.TOUCH_END, () => {\r\n            this.btn_back.opacity = 255;\r\n            this.node.active = false;\r\n            this.GameView.active = false;\r\n            this.HomeView.active = true;\r\n            AudioMgr.instance.play('button');\r\n        });\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}